<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="469" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="469" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHashWithSalt (21 samples, 2.10%)</title><rect x="249.5" y="69" width="24.8" height="15.0" fill="rgb(210,61,15)" rx="2" ry="2" />
<text text-anchor="" x="252.54" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHashWithSalt (26 samples, 2.60%)</title><rect x="629.5" y="101" width="30.7" height="15.0" fill="rgb(238,136,14)" rx="2" ry="2" />
<text text-anchor="" x="632.50" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (12 samples, 1.20%)</title><rect x="286.1" y="85" width="14.2" height="15.0" fill="rgb(250,53,19)" rx="2" ry="2" />
<text text-anchor="" x="289.12" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.hashWithSalt1 (46 samples, 4.60%)</title><rect x="231.8" y="85" width="54.3" height="15.0" fill="rgb(244,135,47)" rx="2" ry="2" />
<text text-anchor="" x="234.84" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (13 samples, 1.30%)</title><rect x="660.2" y="101" width="15.3" height="15.0" fill="rgb(249,159,47)" rx="2" ry="2" />
<text text-anchor="" x="663.18" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHypAvoidCapture.h' (28 samples, 2.80%)</title><rect x="387.6" y="197" width="33.0" height="15.0" fill="rgb(205,124,46)" rx="2" ry="2" />
<text text-anchor="" x="390.60" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.from (14 samples, 1.40%)</title><rect x="300.3" y="85" width="16.5" height="15.0" fill="rgb(244,51,5)" rx="2" ry="2" />
<text text-anchor="" x="303.28" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hashWithSalt (248 samples, 24.80%)</title><rect x="420.6" y="149" width="292.7" height="15.0" fill="rgb(236,172,1)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hashWithSalt</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (14 samples, 1.40%)</title><rect x="675.5" y="117" width="16.5" height="15.0" fill="rgb(234,11,34)" rx="2" ry="2" />
<text text-anchor="" x="678.52" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHyp'.recAvoidingCapture (345 samples, 34.50%)</title><rect x="13.5" y="229" width="407.1" height="15.0" fill="rgb(240,228,26)" rx="2" ry="2" />
<text text-anchor="" x="16.54" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHyp'.recAvoidingCapture</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.hashWithSalt1 (88 samples, 8.80%)</title><rect x="992.9" y="149" width="103.9" height="15.0" fill="rgb(248,2,0)" rx="2" ry="2" />
<text text-anchor="" x="995.94" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashabl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hashWithSalt (375 samples, 37.50%)</title><rect x="713.3" y="181" width="442.5" height="15.0" fill="rgb(223,13,47)" rx="2" ry="2" />
<text text-anchor="" x="716.28" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hashWithSalt</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (11 samples, 1.10%)</title><rect x="562.2" y="85" width="13.0" height="15.0" fill="rgb(205,41,47)" rx="2" ry="2" />
<text text-anchor="" x="565.24" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.HashMap.Internal.hash (248 samples, 24.80%)</title><rect x="420.6" y="197" width="292.7" height="15.0" fill="rgb(248,229,1)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.HashMap.Internal.hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHashWithSalt (60 samples, 6.00%)</title><rect x="137.4" y="85" width="70.8" height="15.0" fill="rgb(206,2,13)" rx="2" ry="2" />
<text text-anchor="" x="140.44" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDReducer.reduce' (998 samples, 99.80%)</title><rect x="10.0" y="309" width="1177.6" height="15.0" fill="rgb(214,90,5)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDReducer.reduce'</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHash (248 samples, 24.80%)</title><rect x="420.6" y="165" width="292.7" height="15.0" fill="rgb(243,18,32)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable.Class.defaultHash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (20 samples, 2.00%)</title><rect x="636.6" y="85" width="23.6" height="15.0" fill="rgb(220,14,54)" rx="2" ry="2" />
<text text-anchor="" x="639.58" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.main (998 samples, 99.80%)</title><rect x="10.0" y="405" width="1177.6" height="15.0" fill="rgb(233,15,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.HashMap.Internal.hash (375 samples, 37.50%)</title><rect x="713.3" y="229" width="442.5" height="15.0" fill="rgb(234,82,23)" rx="2" ry="2" />
<text text-anchor="" x="716.28" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.HashMap.Internal.hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hashWithSalt (191 samples, 19.10%)</title><rect x="91.4" y="117" width="225.4" height="15.0" fill="rgb(214,140,5)" rx="2" ry="2" />
<text text-anchor="" x="94.42" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hashWithSalt</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (3 samples, 0.30%)</title><rect x="282.6" y="53" width="3.5" height="15.0" fill="rgb(242,134,1)" rx="2" ry="2" />
<text text-anchor="" x="285.58" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (8 samples, 0.80%)</title><rect x="1087.3" y="117" width="9.5" height="15.0" fill="rgb(220,8,3)" rx="2" ry="2" />
<text text-anchor="" x="1090.34" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (45 samples, 4.50%)</title><rect x="155.1" y="69" width="53.1" height="15.0" fill="rgb(244,113,26)" rx="2" ry="2" />
<text text-anchor="" x="158.14" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (1 samples, 0.10%)</title><rect x="951.6" y="165" width="1.2" height="15.0" fill="rgb(239,66,36)" rx="2" ry="2" />
<text text-anchor="" x="954.64" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.run2 (998 samples, 99.80%)</title><rect x="10.0" y="389" width="1177.6" height="15.0" fill="rgb(214,147,52)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.run2</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.from (4 samples, 0.40%)</title><rect x="952.8" y="165" width="4.7" height="15.0" fill="rgb(229,144,12)" rx="2" ry="2" />
<text text-anchor="" x="955.82" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHashWithSalt (115 samples, 11.50%)</title><rect x="814.8" y="149" width="135.7" height="15.0" fill="rgb(228,53,41)" rx="2" ry="2" />
<text text-anchor="" x="817.76" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable.Cla..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UNKNOWN (2 samples, 0.20%)</title><rect x="1187.6" y="421" width="2.4" height="15.0" fill="rgb(212,81,26)" rx="2" ry="2" />
<text text-anchor="" x="1190.64" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (22 samples, 2.20%)</title><rect x="1096.8" y="149" width="25.9" height="15.0" fill="rgb(217,178,17)" rx="2" ry="2" />
<text text-anchor="" x="1099.78" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hash (375 samples, 37.50%)</title><rect x="713.3" y="213" width="442.5" height="15.0" fill="rgb(237,62,44)" rx="2" ry="2" />
<text text-anchor="" x="716.28" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHyp.(...) (650 samples, 65.00%)</title><rect x="420.6" y="261" width="767.0" height="15.0" fill="rgb(240,42,36)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHyp.(...)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (4 samples, 0.40%)</title><rect x="670.8" y="85" width="4.7" height="15.0" fill="rgb(215,209,43)" rx="2" ry="2" />
<text text-anchor="" x="673.80" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.== (60 samples, 6.00%)</title><rect x="316.8" y="165" width="70.8" height="15.0" fill="rgb(235,135,19)" rx="2" ry="2" />
<text text-anchor="" x="319.80" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.==</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.== (27 samples, 2.70%)</title><rect x="1155.8" y="229" width="31.8" height="15.0" fill="rgb(232,88,25)" rx="2" ry="2" />
<text text-anchor="" x="1158.78" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (16 samples, 1.60%)</title><rect x="931.6" y="117" width="18.9" height="15.0" fill="rgb(251,79,0)" rx="2" ry="2" />
<text text-anchor="" x="934.58" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hash (191 samples, 19.10%)</title><rect x="91.4" y="149" width="225.4" height="15.0" fill="rgb(207,90,39)" rx="2" ry="2" />
<text text-anchor="" x="94.42" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.from (28 samples, 2.80%)</title><rect x="1122.7" y="149" width="33.1" height="15.0" fill="rgb(242,5,51)" rx="2" ry="2" />
<text text-anchor="" x="1125.74" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (3 samples, 0.30%)</title><rect x="688.5" y="101" width="3.5" height="15.0" fill="rgb(221,150,28)" rx="2" ry="2" />
<text text-anchor="" x="691.50" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.alphaEqForm' (21 samples, 2.10%)</title><rect x="362.8" y="133" width="24.8" height="15.0" fill="rgb(240,10,46)" rx="2" ry="2" />
<text text-anchor="" x="365.82" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >N..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHypAvoidCapture (345 samples, 34.50%)</title><rect x="13.5" y="213" width="407.1" height="15.0" fill="rgb(237,180,27)" rx="2" ry="2" />
<text text-anchor="" x="16.54" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHypAvoidCapture</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.hashWithSalt1 (57 samples, 5.70%)</title><rect x="608.3" y="117" width="67.2" height="15.0" fill="rgb(225,92,46)" rx="2" ry="2" />
<text text-anchor="" x="611.26" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.alphaEqForm (21 samples, 2.10%)</title><rect x="362.8" y="117" width="24.8" height="15.0" fill="rgb(229,224,36)" rx="2" ry="2" />
<text text-anchor="" x="365.82" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >N..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (24 samples, 2.40%)</title><rect x="1068.5" y="133" width="28.3" height="15.0" fill="rgb(237,13,3)" rx="2" ry="2" />
<text text-anchor="" x="1071.46" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.HashMap.Internal.hash (191 samples, 19.10%)</title><rect x="91.4" y="165" width="225.4" height="15.0" fill="rgb(247,137,7)" rx="2" ry="2" />
<text text-anchor="" x="94.42" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.HashMap.Internal.hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.from (2 samples, 0.20%)</title><rect x="576.4" y="133" width="2.4" height="15.0" fill="rgb(227,84,26)" rx="2" ry="2" />
<text text-anchor="" x="579.40" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHashWithSalt (72 samples, 7.20%)</title><rect x="490.3" y="117" width="84.9" height="15.0" fill="rgb(205,139,53)" rx="2" ry="2" />
<text text-anchor="" x="493.26" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hash..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.from (2 samples, 0.20%)</title><rect x="209.4" y="101" width="2.4" height="15.0" fill="rgb(243,124,46)" rx="2" ry="2" />
<text text-anchor="" x="212.42" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHyp'.(...) (345 samples, 34.50%)</title><rect x="13.5" y="245" width="407.1" height="15.0" fill="rgb(247,17,17)" rx="2" ry="2" />
<text text-anchor="" x="16.54" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHyp'.(...)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.hashWithSalt1 (97 samples, 9.70%)</title><rect x="93.8" y="101" width="114.4" height="15.0" fill="rgb(249,18,36)" rx="2" ry="2" />
<text text-anchor="" x="96.78" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (9 samples, 0.90%)</title><rect x="197.6" y="53" width="10.6" height="15.0" fill="rgb(235,5,29)" rx="2" ry="2" />
<text text-anchor="" x="200.62" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (1 samples, 0.10%)</title><rect x="208.2" y="101" width="1.2" height="15.0" fill="rgb(234,228,15)" rx="2" ry="2" />
<text text-anchor="" x="211.24" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Certifier.reduceContext (998 samples, 99.80%)</title><rect x="10.0" y="357" width="1177.6" height="15.0" fill="rgb(208,5,12)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Certifier.reduceContext</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.citedHypIds (251 samples, 25.10%)</title><rect x="91.4" y="181" width="296.2" height="15.0" fill="rgb(206,91,19)" rx="2" ry="2" />
<text text-anchor="" x="94.42" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.citedHypIds</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (3 samples, 0.30%)</title><rect x="296.7" y="69" width="3.6" height="15.0" fill="rgb(211,211,44)" rx="2" ry="2" />
<text text-anchor="" x="299.74" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHash (191 samples, 19.10%)</title><rect x="91.4" y="133" width="225.4" height="15.0" fill="rgb(225,11,4)" rx="2" ry="2" />
<text text-anchor="" x="94.42" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable.Class.defaultHash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (7 samples, 0.70%)</title><rect x="1060.2" y="101" width="8.3" height="15.0" fill="rgb(206,20,51)" rx="2" ry="2" />
<text text-anchor="" x="1063.20" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (1 samples, 0.10%)</title><rect x="575.2" y="133" width="1.2" height="15.0" fill="rgb(214,7,54)" rx="2" ry="2" />
<text text-anchor="" x="578.22" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHash (375 samples, 37.50%)</title><rect x="713.3" y="197" width="442.5" height="15.0" fill="rgb(246,185,49)" rx="2" ry="2" />
<text text-anchor="" x="716.28" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable.Class.defaultHash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHypAvoidCapture.(...) (251 samples, 25.10%)</title><rect x="91.4" y="197" width="296.2" height="15.0" fill="rgb(221,202,16)" rx="2" ry="2" />
<text text-anchor="" x="94.42" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHypAvoidCapture.(...)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.hashWithSalt1 (198 samples, 19.80%)</title><rect x="718.0" y="165" width="233.6" height="15.0" fill="rgb(224,183,16)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable.Class.hashWithSalt1</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.HashMap.Internal.Strict.insert (248 samples, 24.80%)</title><rect x="420.6" y="229" width="292.7" height="15.0" fill="rgb(228,37,29)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.HashMap.Internal.Strict.insert</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.from (18 samples, 1.80%)</title><rect x="692.0" y="117" width="21.3" height="15.0" fill="rgb(222,172,16)" rx="2" ry="2" />
<text text-anchor="" x="695.04" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >N..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (4 samples, 0.40%)</title><rect x="269.6" y="37" width="4.7" height="15.0" fill="rgb(223,125,2)" rx="2" ry="2" />
<text text-anchor="" x="272.60" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MAIN.MAIN (998 samples, 99.80%)</title><rect x="10.0" y="421" width="1177.6" height="15.0" fill="rgb(213,122,41)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >MAIN.MAIN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.defaultHashWithSalt (38 samples, 3.80%)</title><rect x="1023.6" y="133" width="44.9" height="15.0" fill="rgb(246,177,52)" rx="2" ry="2" />
<text text-anchor="" x="1026.62" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (82 samples, 8.20%)</title><rect x="853.7" y="133" width="96.8" height="15.0" fill="rgb(233,84,28)" rx="2" ry="2" />
<text text-anchor="" x="856.70" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashab..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Class.hashWithSalt1 (128 samples, 12.80%)</title><rect x="424.2" y="133" width="151.0" height="15.0" fill="rgb(244,79,20)" rx="2" ry="2" />
<text text-anchor="" x="427.18" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Hashable.Class..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hashWithSalt (89 samples, 8.90%)</title><rect x="211.8" y="101" width="105.0" height="15.0" fill="rgb(246,114,8)" rx="2" ry="2" />
<text text-anchor="" x="214.78" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hashWithS..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (55 samples, 5.50%)</title><rect x="510.3" y="101" width="64.9" height="15.0" fill="rgb(249,104,51)" rx="2" ry="2" />
<text text-anchor="" x="513.32" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Ha..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.HashMap.Internal.insert (248 samples, 24.80%)</title><rect x="420.6" y="213" width="292.7" height="15.0" fill="rgb(232,69,49)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.HashMap.Internal.insert</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.alphaEqTerms (4 samples, 0.40%)</title><rect x="382.9" y="101" width="4.7" height="15.0" fill="rgb(246,80,50)" rx="2" ry="2" />
<text text-anchor="" x="385.88" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Certifier.reduceHyp (998 samples, 99.80%)</title><rect x="10.0" y="341" width="1177.6" height="15.0" fill="rgb(251,187,47)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Certifier.reduceHyp</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (29 samples, 2.90%)</title><rect x="1034.2" y="117" width="34.3" height="15.0" fill="rgb(222,4,7)" rx="2" ry="2" />
<text text-anchor="" x="1037.24" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Da..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hash (248 samples, 24.80%)</title><rect x="420.6" y="181" width="292.7" height="15.0" fill="rgb(223,84,41)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (1,000 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHyp (998 samples, 99.80%)</title><rect x="10.0" y="277" width="1177.6" height="15.0" fill="rgb(229,184,0)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHyp</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (16 samples, 1.60%)</title><rect x="255.4" y="53" width="18.9" height="15.0" fill="rgb(229,169,8)" rx="2" ry="2" />
<text text-anchor="" x="258.44" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (5 samples, 0.50%)</title><rect x="654.3" y="69" width="5.9" height="15.0" fill="rgb(221,224,9)" rx="2" ry="2" />
<text text-anchor="" x="657.28" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.== (21 samples, 2.10%)</title><rect x="362.8" y="149" width="24.8" height="15.0" fill="rgb(208,76,14)" rx="2" ry="2" />
<text text-anchor="" x="365.82" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >N..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.Mix.mixHash (5 samples, 0.50%)</title><rect x="1116.8" y="133" width="5.9" height="15.0" fill="rgb(240,218,30)" rx="2" ry="2" />
<text text-anchor="" x="1119.84" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.substHyp' (348 samples, 34.80%)</title><rect x="10.0" y="261" width="410.6" height="15.0" fill="rgb(207,223,28)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.substHyp'</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.run2.ctxR (998 samples, 99.80%)</title><rect x="10.0" y="373" width="1177.6" height="15.0" fill="rgb(209,136,1)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.run2.ctxR</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.freshWRT (8 samples, 0.80%)</title><rect x="411.2" y="181" width="9.4" height="15.0" fill="rgb(244,118,26)" rx="2" ry="2" />
<text text-anchor="" x="414.20" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDSubst.citedHypIds (650 samples, 65.00%)</title><rect x="420.6" y="245" width="767.0" height="15.0" fill="rgb(214,25,11)" rx="2" ry="2" />
<text text-anchor="" x="423.64" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDSubst.citedHypIds</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hashWithSalt (114 samples, 11.40%)</title><rect x="578.8" y="133" width="134.5" height="15.0" fill="rgb(210,17,18)" rx="2" ry="2" />
<text text-anchor="" x="581.76" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hashWithSalt</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDReducer.reduce (998 samples, 99.80%)</title><rect x="10.0" y="325" width="1177.6" height="15.0" fill="rgb(252,97,24)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDReducer.reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ND.hashWithSalt (168 samples, 16.80%)</title><rect x="957.5" y="165" width="198.3" height="15.0" fill="rgb(252,216,29)" rx="2" ry="2" />
<text text-anchor="" x="960.54" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ND.hashWithSalt</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (1 samples, 0.10%)</title><rect x="950.5" y="149" width="1.1" height="15.0" fill="rgb(228,68,12)" rx="2" ry="2" />
<text text-anchor="" x="953.46" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NDReducer.reduce1 (998 samples, 99.80%)</title><rect x="10.0" y="293" width="1177.6" height="15.0" fill="rgb(240,134,22)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >NDReducer.reduce1</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Hashable.LowLevel.hashInt (10 samples, 1.00%)</title><rect x="274.3" y="69" width="11.8" height="15.0" fill="rgb(222,157,42)" rx="2" ry="2" />
<text text-anchor="" x="277.32" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
